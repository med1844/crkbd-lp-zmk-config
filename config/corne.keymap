/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri-layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  ;  | BKSP |
// | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  | ENT  |
// | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  | ESC | SHFT |
//                    | ALT | LWR | SPC |   | SPC | RSE | GUI |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp ;    &kp BSPC
   &kp LCTRL &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O    &kp RET
   &kp LSHFT &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp ESC  &kp RSHFT
                  &kp LALT &mo 1 &kp SPACE   &kp SPACE &mo 2 &kp RGUI
                        >;
                };
                lower_layer {

// -----------------------------------------------------------------------------------------
// |  v  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  v  |
// |  v  | F11 | F12 |  ,  |  .  |     |   | LFT | DWN |  UP | RGT |     |  v  |
// |  v  | F1  | F2  | F3  | F4  | F5  |   | F6  | F7  | F8  | F9  | F10 |  v  |
//                   |  v  |     |  v  |   |  v  |     |  v  |
                        bindings = <
   &trans &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0  &trans
   &trans &kp F11      &kp F12      &kp ,        &kp .        &none          &kp LEFT &kp DOWN &kp UP &kp RIGHT &none   &trans
   &trans &kp F1       &kp F2       &kp F3       &kp F4       &kp F5         &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &trans
                          	        &trans       &trans       &trans         &trans   &trans   &trans  
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  v  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  v  |
// |  v  |  '  |  ;  |  ,  |  .  |  /  |   |  -  |  =  |  [  |  ]  |  \  |  `  |
// |  v  |  "  |  :  |  <  |  >  |  ?  |   |  _  |  +  |  {  |  }  | "|" |  ~  |
//                   |  v  |     |  v  |   |  v  |     |  v  |
                        bindings = <
   &trans &kp EXCL &kp AT    &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &trans
   &trans &kp SQT  &kp SEMI  &COMMA   &DOT     &SLASH      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &trans &kp DQT  &kp COLON &LT      &GT      &QMARK      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &trans   &trans   &trans      &trans    &trans    &trans  
                        >;
                };

                adjust_layer {
                        bindings = <
   &reset &none &none &none  &none  &none    &none &none     &none &none &none &kp DEL
   &none  &none &none &none  &none  &none    &none &kp PSCRN &none &none &none &none
   &none  &none &none &none  &none  &none    &none &none     &none &none &none &none
                      &trans &trans &trans   &trans &trans &trans
                }
        };
};
